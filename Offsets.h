namespace Offsets
{
    constexpr auto coverDot = 0x20; // float
    constexpr auto Scopek__BackingField = 0x10; // AIDesignScope
			constexpr auto Descriptionk__BackingField = 0x18; // string
			constexpr auto AvailableStates = 0x20; // List(AIState)
			constexpr auto DefaultStateContainerID = 0x28; // int
			constexpr auto stateContainers = 0x30; // Dictionary(int, AIStateContainer)
      constexpr auto _ai = 0x18; // PatrolHelicopterAI
			constexpr auto swayAmount = 0x20; // float
			constexpr auto lastStrafeScalar = 0x24; // float
			constexpr auto lastForwardBackScalar = 0x28; // float
			constexpr auto degreeMax = 0x2c; // float
			constexpr auto lastPosition = 0x30; // Vector3
			constexpr auto oldMoveSpeed = 0x3c; // float
			constexpr auto smoothRateOfChange = 0x40; // float
			constexpr auto flareAmount = 0x44; // float
      constexpr auto BoundingBox = 0x10; // Bounds
			constexpr auto NeighbourCells = 0x28; // List(AIInformationCell)
			constexpr auto MovePoints = 0x30; // AIInformationCellContents(AIMovePoint)
			constexpr auto CoverPoints = 0x38; // AIInformationCellContents(AICoverPoint)
			constexpr auto Xk__BackingField = 0x40; // int
			constexpr auto Zk__BackingField = 0x44; // int
      constexpr auto CellSize = 0x18; // int
			constexpr auto BoundingBox = 0x1c; // Bounds
			constexpr auto Cells = 0x38; // AIInformationCell[]
			constexpr auto origin = 0x40; // Vector3
			constexpr auto xCellCount = 0x4c; // int
			constexpr auto zCellCount = 0x50; // int
			constexpr auto movePointResults = 0x58; // AIMovePoint[]
			constexpr auto coverPointResults = 0x60; // AICoverPoint[]
			constexpr auto resultCells = 0x68; // AIInformationCell[]
      constexpr auto Grid = 0x18; // AIInformationGrid
			constexpr auto Range = 0x20; // float
      constexpr auto ShouldSleepAI = 0x18; // bool
			constexpr auto Virtual = 0x19; // bool
			constexpr auto UseCalculatedCoverDistances = 0x1a; // bool
			constexpr auto coverPoints = 0x20; // List(AICoverPoint)
			constexpr auto movePoints = 0x28; // List(AIMovePoint)
			constexpr auto coverPointArray = 0x30; // AICoverPoint[]
			constexpr auto movePointArray = 0x38; // AIMovePoint[]
			constexpr auto navMeshLinks = 0x40; // List(NavMeshLink)
			constexpr auto paths = 0x48; // List(AIMovePointPath)
			constexpr auto bounds = 0x50; // Bounds
			constexpr auto grid = 0x68; // AIInformationGrid
      constexpr auto Entity = 0x10; // AIMemoryBank(BaseEntity)
			constexpr auto Position = 0x18; // AIMemoryBank(Vector3)
			constexpr auto AIPoint = 0x20; // AIMemoryBank(AIPoint)
      constexpr auto distances = 0x20; // ListDictionary(AIMovePoint, float)
			constexpr auto distancesToCover = 0x28; // ListDictionary(AICoverPoint, float)
			constexpr auto radius = 0x30; // float
			constexpr auto WaitTime = 0x34; // float
			constexpr auto LookAtPoints = 0x38; // List(Transform)
      constexpr auto distance = 0x10; // float
			constexpr auto target = 0x18; // AIMovePoint
      constexpr auto currentUser = 0x18; // BaseEntity
      constexpr auto IDk__BackingField = 0x10; // int
			constexpr auto Statek__BackingField = 0x14; // AIState
			constexpr auto Events = 0x18; // List(BaseAIEvent)
			constexpr auto InputMemorySlotk__BackingField = 0x20; // int
      constexpr auto entryPoint1 = 0x30; // Transform
			constexpr auto entryPoint2 = 0x38; // Transform
			constexpr auto waitPoints = 0x40; // AITraversalWaitPoint[]
			constexpr auto movementArea = 0x48; // Bounds
			constexpr auto activeEntryPoint = 0x60; // Transform
			constexpr auto nextFreeTime = 0x68; // float
      constexpr auto nextFreeTime = 0x18; // float
      constexpr auto input1Amount = 0x288; // int
			constexpr auto input2Amount = 0x28c; // int
      constexpr auto id = 0x18; // uint
			constexpr auto spriteID = 0x1c; // uint
			constexpr auto soundID = 0x20; // uint
			constexpr auto visible = 0x24; // bool
			constexpr auto heading = 0x28; // Vector3
			constexpr auto isEnabled = 0x34; // bool
			constexpr auto dirty = 0x35; // bool
			constexpr auto alpha = 0x38; // float
			constexpr auto boxCollider = 0x40; // BoxCollider
			constexpr auto host = 0x48; // bool
			constexpr auto localAuthorativeOverride = 0x49; // bool
			constexpr auto arcadeEntityParent = 0x50; // ArcadeEntity
			constexpr auto prefabID = 0x58; // uint
			constexpr auto takesDamage = 0x5c; // bool
			constexpr auto health = 0x60; // float
			constexpr auto maxHealth = 0x64; // float
			constexpr auto mapLoadedEntiy = 0x68; // bool
			constexpr auto spriteRef = 0x70; // Sprite
			constexpr auto arcadeGameParent = 0x78; // BaseArcadeGame
			constexpr auto controller = 0x80; // ArcadeEntityController
			constexpr auto savedState = 0x88; // ArcadeGame.arcadeEnt
      constexpr auto parentGame = 0x18; // BaseArcadeGame
			constexpr auto arcadeEntity = 0x20; // ArcadeEntity
			constexpr auto sourceEntity = 0x28; // ArcadeEntity
			constexpr auto authorative = 0x30; // bool
      constexpr auto ShouldPool = 0x10; // bool
			constexpr auto _disposed = 0x11; // bool
			constexpr auto id = 0x14; // uint
			constexpr auto name = 0x18; // string
			constexpr auto spriteID = 0x20; // uint
			constexpr auto soundID = 0x24; // uint
			constexpr auto visible = 0x28; // bool
			constexpr auto position = 0x2c; // Vector3
			constexpr auto heading = 0x38; // Vector3
			constexpr auto enabled = 0x44; // bool
			constexpr auto scale = 0x48; // Vector3
			constexpr auto colliderScale = 0x54; // Vector3
			constexpr auto alpha = 0x60; // float
			constexpr auto prefabID = 0x64; // uint
			constexpr auto parentID = 0x68; // uint
      constexpr auto ShouldPool = 0x10; // bool
			constexpr auto _disposed = 0x11; // bool
			constexpr auto playerID = 0x18; // ulong
			constexpr auto displayName = 0x20; // string
			constexpr auto score = 0x28; // int
      constexpr auto _paramMap = 0x10; // int[]
			constexpr auto _inoutArgCount = 0x18; // int
			constexpr auto _method = 0x20; // MethodBase
      constexpr auto m_ObjectArgument = 0x10; // Object
			constexpr auto m_ObjectArgumentAssemblyTypeName = 0x18; // string
			constexpr auto m_IntArgument = 0x20; // int
			constexpr auto m_FloatArgument = 0x24; // float
			constexpr auto m_StringArgument = 0x28; // string
			constexpr auto m_BoolArgument = 0x30; // bool
      constexpr auto m_paramName = 0x88; // string
}
